{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst datetimePicker = flatpickr('#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const userSelectedDate = selectedDates[0];\n    const startBtn = document.querySelector('#start-btn');\n    if (userSelectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n});\n\nconst startBtn = document.querySelector('#start-btn');\nconst timerFields = document.querySelectorAll('.timer .value');\nlet countdownInterval;\nlet selectedDate = null;\n\nfunction startTimer() {\n  selectedDate = datetimePicker.selectedDates[0];\n  startBtn.disabled = true;\n  document.querySelector('#datetime-picker').disabled = true;\n\n  countdownInterval = setInterval(() => {\n    const currentTime = new Date();\n    const remainingTime = selectedDate - currentTime;\n\n    if (remainingTime <= 0) {\n      clearInterval(countdownInterval);\n      timerFields.forEach(field => (field.textContent = '00'));\n    } else {\n      const { days, hours, minutes, seconds } = convertMs(remainingTime);\n      timerFields[0].textContent = addLeadingZero(days);\n      timerFields[1].textContent = addLeadingZero(hours);\n      timerFields[2].textContent = addLeadingZero(minutes);\n      timerFields[3].textContent = addLeadingZero(seconds);\n    }\n  }, 1000);\n}\n\nstartBtn.addEventListener('click', startTimer);\n"],"names":["addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","datetimePicker","flatpickr","selectedDates","userSelectedDate","startBtn","iziToast","timerFields","countdownInterval","selectedDate","startTimer","remainingTime","field"],"mappings":"+IAMA,SAASA,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAiBC,EAAU,mBAAoB,CACnD,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAmBD,EAAc,CAAC,EAClCE,EAAW,SAAS,cAAc,YAAY,EAChDD,GAAoB,IAAI,MAC1BE,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDD,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,CAAC,EAEKA,EAAW,SAAS,cAAc,YAAY,EAC9CE,EAAc,SAAS,iBAAiB,eAAe,EAC7D,IAAIC,EACAC,EAAe,KAEnB,SAASC,GAAa,CACpBD,EAAeR,EAAe,cAAc,CAAC,EAC7CI,EAAS,SAAW,GACpB,SAAS,cAAc,kBAAkB,EAAE,SAAW,GAEtDG,EAAoB,YAAY,IAAM,CAEpC,MAAMG,EAAgBF,EADF,IAAI,KAGxB,GAAIE,GAAiB,EACnB,cAAcH,CAAiB,EAC/BD,EAAY,QAAQK,GAAUA,EAAM,YAAc,IAAK,MAClD,CACL,KAAM,CAAE,KAAAf,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUgB,CAAa,EACjEJ,EAAY,CAAC,EAAE,YAAcd,EAAeI,CAAI,EAChDU,EAAY,CAAC,EAAE,YAAcd,EAAeK,CAAK,EACjDS,EAAY,CAAC,EAAE,YAAcd,EAAeM,CAAO,EACnDQ,EAAY,CAAC,EAAE,YAAcd,EAAeO,CAAO,CACpD,CACF,EAAE,GAAI,CACT,CAEAK,EAAS,iBAAiB,QAASK,CAAU"}